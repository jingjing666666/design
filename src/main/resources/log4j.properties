#log4j.rootLogger = [level],appenderName,appenderName2,...
#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL
##Log4j建议只使用四个级别，优先级从低到高分别是DEBUG,INFO,WARN,ERROR
#通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关
#比如在这里定义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来

log4j.rootLogger=DEBUG,Console

#Log4j针对不同包指定level：
#一般在生产环境中应用系统，日志级别调整为INFO以避免过多的输出日志。
#但某些时候，需要跟踪具体问题，那么就得打开DEBUG日志。
#但是如果打开log4j.rootLogger，则需要的信息就会淹没在日志的海洋中。
#此时，需要单独指定某个或者某些Logger的日志级别为DEBUG，而rootLogger保持INFO不变。
#参考配置如下（指定com.ssm.maven.core.admin类的日志输出）
#控制台日志
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%p][%t][%d{yyyy-MM-dd HH\:mm\:ss}][%C] - %m%n

#显示日志配置
#log4j.logger.java.sql.ResultSet=INFO
#log4j.logger.org.apache=INFO
#log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG
##mybatis显示SQL语句日志配置
#log4j.logger.org.mybatis=DEBUG
log4j.logger.com.jingjing.manage.dao=DEBUG
log4j.logger.org.springframework.web.servlet.DispatcherServlet=DEBUG


